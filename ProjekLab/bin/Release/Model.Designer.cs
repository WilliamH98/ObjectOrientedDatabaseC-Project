//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WatchDBModel", "FK_DetailSales_SalesTransaction", "SalesTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjekLab.SalesTransaction), "DetailSale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjekLab.DetailSales), true)]
[assembly: EdmRelationshipAttribute("WatchDBModel", "FK_DetailSales_Watch", "Watch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjekLab.Watch), "DetailSale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjekLab.DetailSales), true)]
[assembly: EdmRelationshipAttribute("WatchDBModel", "FK_SalesTransaction_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjekLab.User), "SalesTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjekLab.SalesTransaction), true)]
[assembly: EdmRelationshipAttribute("WatchDBModel", "FK_Watch_WatchType", "WatchType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjekLab.WatchType), "Watch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjekLab.Watch), true)]

#endregion

namespace ProjekLab
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WatchDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WatchDBEntities object using the connection string found in the 'WatchDBEntities' section of the application configuration file.
        /// </summary>
        public WatchDBEntities() : base("name=WatchDBEntities", "WatchDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WatchDBEntities object.
        /// </summary>
        public WatchDBEntities(string connectionString) : base(connectionString, "WatchDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WatchDBEntities object.
        /// </summary>
        public WatchDBEntities(EntityConnection connection) : base(connection, "WatchDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DetailSales> DetailSales1
        {
            get
            {
                if ((_DetailSales1 == null))
                {
                    _DetailSales1 = base.CreateObjectSet<DetailSales>("DetailSales1");
                }
                return _DetailSales1;
            }
        }
        private ObjectSet<DetailSales> _DetailSales1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesTransaction> SalesTransactions
        {
            get
            {
                if ((_SalesTransactions == null))
                {
                    _SalesTransactions = base.CreateObjectSet<SalesTransaction>("SalesTransactions");
                }
                return _SalesTransactions;
            }
        }
        private ObjectSet<SalesTransaction> _SalesTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Watch> Watches
        {
            get
            {
                if ((_Watches == null))
                {
                    _Watches = base.CreateObjectSet<Watch>("Watches");
                }
                return _Watches;
            }
        }
        private ObjectSet<Watch> _Watches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WatchType> WatchTypes
        {
            get
            {
                if ((_WatchTypes == null))
                {
                    _WatchTypes = base.CreateObjectSet<WatchType>("WatchTypes");
                }
                return _WatchTypes;
            }
        }
        private ObjectSet<WatchType> _WatchTypes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DetailSales1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDetailSales1(DetailSales detailSales)
        {
            base.AddObject("DetailSales1", detailSales);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesTransactions(SalesTransaction salesTransaction)
        {
            base.AddObject("SalesTransactions", salesTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Watches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatches(Watch watch)
        {
            base.AddObject("Watches", watch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WatchTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWatchTypes(WatchType watchType)
        {
            base.AddObject("WatchTypes", watchType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WatchDBModel", Name="DetailSales")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DetailSales : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DetailSales object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="watchId">Initial value of the WatchId property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static DetailSales CreateDetailSales(global::System.String transactionId, global::System.String watchId, global::System.Int32 quantity)
        {
            DetailSales detailSales = new DetailSales();
            detailSales.TransactionId = transactionId;
            detailSales.WatchId = watchId;
            detailSales.Quantity = quantity;
            return detailSales;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.String _TransactionId;
        partial void OnTransactionIdChanging(global::System.String value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchId
        {
            get
            {
                return _WatchId;
            }
            set
            {
                if (_WatchId != value)
                {
                    OnWatchIdChanging(value);
                    ReportPropertyChanging("WatchId");
                    _WatchId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WatchId");
                    OnWatchIdChanged();
                }
            }
        }
        private global::System.String _WatchId;
        partial void OnWatchIdChanging(global::System.String value);
        partial void OnWatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_DetailSales_SalesTransaction", "SalesTransaction")]
        public SalesTransaction SalesTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesTransaction>("WatchDBModel.FK_DetailSales_SalesTransaction", "SalesTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesTransaction>("WatchDBModel.FK_DetailSales_SalesTransaction", "SalesTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesTransaction> SalesTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesTransaction>("WatchDBModel.FK_DetailSales_SalesTransaction", "SalesTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesTransaction>("WatchDBModel.FK_DetailSales_SalesTransaction", "SalesTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_DetailSales_Watch", "Watch")]
        public Watch Watch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Watch>("WatchDBModel.FK_DetailSales_Watch", "Watch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Watch>("WatchDBModel.FK_DetailSales_Watch", "Watch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Watch> WatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Watch>("WatchDBModel.FK_DetailSales_Watch", "Watch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Watch>("WatchDBModel.FK_DetailSales_Watch", "Watch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WatchDBModel", Name="SalesTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesTransaction object.
        /// </summary>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static SalesTransaction CreateSalesTransaction(global::System.String transactionId, global::System.DateTime transactionDate, global::System.String userId)
        {
            SalesTransaction salesTransaction = new SalesTransaction();
            salesTransaction.TransactionId = transactionId;
            salesTransaction.TransactionDate = transactionDate;
            salesTransaction.UserId = userId;
            return salesTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                if (_TransactionId != value)
                {
                    OnTransactionIdChanging(value);
                    ReportPropertyChanging("TransactionId");
                    _TransactionId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionId");
                    OnTransactionIdChanged();
                }
            }
        }
        private global::System.String _TransactionId;
        partial void OnTransactionIdChanging(global::System.String value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_DetailSales_SalesTransaction", "DetailSale")]
        public EntityCollection<DetailSales> DetailSales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DetailSales>("WatchDBModel.FK_DetailSales_SalesTransaction", "DetailSale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DetailSales>("WatchDBModel.FK_DetailSales_SalesTransaction", "DetailSale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_SalesTransaction_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WatchDBModel.FK_SalesTransaction_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WatchDBModel.FK_SalesTransaction_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("WatchDBModel.FK_SalesTransaction_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("WatchDBModel.FK_SalesTransaction_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WatchDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="fullname">Initial value of the Fullname property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="role">Initial value of the Role property.</param>
        public static User CreateUser(global::System.String userId, global::System.String fullname, global::System.String password, global::System.String gender, global::System.String phone, global::System.String address, global::System.String role)
        {
            User user = new User();
            user.UserId = userId;
            user.Fullname = fullname;
            user.Password = password;
            user.Gender = gender;
            user.Phone = phone;
            user.Address = address;
            user.Role = role;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Role
        {
            get
            {
                return _Role;
            }
            set
            {
                OnRoleChanging(value);
                ReportPropertyChanging("Role");
                _Role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Role");
                OnRoleChanged();
            }
        }
        private global::System.String _Role;
        partial void OnRoleChanging(global::System.String value);
        partial void OnRoleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_SalesTransaction_User", "SalesTransaction")]
        public EntityCollection<SalesTransaction> SalesTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesTransaction>("WatchDBModel.FK_SalesTransaction_User", "SalesTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesTransaction>("WatchDBModel.FK_SalesTransaction_User", "SalesTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WatchDBModel", Name="Watch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Watch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Watch object.
        /// </summary>
        /// <param name="watchId">Initial value of the WatchId property.</param>
        /// <param name="watchName">Initial value of the WatchName property.</param>
        /// <param name="watchTypeId">Initial value of the WatchTypeId property.</param>
        /// <param name="watchPrice">Initial value of the WatchPrice property.</param>
        /// <param name="watchStock">Initial value of the WatchStock property.</param>
        public static Watch CreateWatch(global::System.String watchId, global::System.String watchName, global::System.String watchTypeId, global::System.Int32 watchPrice, global::System.Int32 watchStock)
        {
            Watch watch = new Watch();
            watch.WatchId = watchId;
            watch.WatchName = watchName;
            watch.WatchTypeId = watchTypeId;
            watch.WatchPrice = watchPrice;
            watch.WatchStock = watchStock;
            return watch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchId
        {
            get
            {
                return _WatchId;
            }
            set
            {
                if (_WatchId != value)
                {
                    OnWatchIdChanging(value);
                    ReportPropertyChanging("WatchId");
                    _WatchId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WatchId");
                    OnWatchIdChanged();
                }
            }
        }
        private global::System.String _WatchId;
        partial void OnWatchIdChanging(global::System.String value);
        partial void OnWatchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchName
        {
            get
            {
                return _WatchName;
            }
            set
            {
                OnWatchNameChanging(value);
                ReportPropertyChanging("WatchName");
                _WatchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WatchName");
                OnWatchNameChanged();
            }
        }
        private global::System.String _WatchName;
        partial void OnWatchNameChanging(global::System.String value);
        partial void OnWatchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchTypeId
        {
            get
            {
                return _WatchTypeId;
            }
            set
            {
                OnWatchTypeIdChanging(value);
                ReportPropertyChanging("WatchTypeId");
                _WatchTypeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WatchTypeId");
                OnWatchTypeIdChanged();
            }
        }
        private global::System.String _WatchTypeId;
        partial void OnWatchTypeIdChanging(global::System.String value);
        partial void OnWatchTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WatchPrice
        {
            get
            {
                return _WatchPrice;
            }
            set
            {
                OnWatchPriceChanging(value);
                ReportPropertyChanging("WatchPrice");
                _WatchPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WatchPrice");
                OnWatchPriceChanged();
            }
        }
        private global::System.Int32 _WatchPrice;
        partial void OnWatchPriceChanging(global::System.Int32 value);
        partial void OnWatchPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WatchStock
        {
            get
            {
                return _WatchStock;
            }
            set
            {
                OnWatchStockChanging(value);
                ReportPropertyChanging("WatchStock");
                _WatchStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WatchStock");
                OnWatchStockChanged();
            }
        }
        private global::System.Int32 _WatchStock;
        partial void OnWatchStockChanging(global::System.Int32 value);
        partial void OnWatchStockChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_DetailSales_Watch", "DetailSale")]
        public EntityCollection<DetailSales> DetailSales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DetailSales>("WatchDBModel.FK_DetailSales_Watch", "DetailSale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DetailSales>("WatchDBModel.FK_DetailSales_Watch", "DetailSale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_Watch_WatchType", "WatchType")]
        public WatchType WatchType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WatchType>("WatchDBModel.FK_Watch_WatchType", "WatchType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WatchType>("WatchDBModel.FK_Watch_WatchType", "WatchType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WatchType> WatchTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WatchType>("WatchDBModel.FK_Watch_WatchType", "WatchType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WatchType>("WatchDBModel.FK_Watch_WatchType", "WatchType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WatchDBModel", Name="WatchType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WatchType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WatchType object.
        /// </summary>
        /// <param name="watchTypeId">Initial value of the WatchTypeId property.</param>
        /// <param name="watchTypeName">Initial value of the WatchTypeName property.</param>
        /// <param name="watchDescription">Initial value of the WatchDescription property.</param>
        public static WatchType CreateWatchType(global::System.String watchTypeId, global::System.String watchTypeName, global::System.String watchDescription)
        {
            WatchType watchType = new WatchType();
            watchType.WatchTypeId = watchTypeId;
            watchType.WatchTypeName = watchTypeName;
            watchType.WatchDescription = watchDescription;
            return watchType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchTypeId
        {
            get
            {
                return _WatchTypeId;
            }
            set
            {
                if (_WatchTypeId != value)
                {
                    OnWatchTypeIdChanging(value);
                    ReportPropertyChanging("WatchTypeId");
                    _WatchTypeId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WatchTypeId");
                    OnWatchTypeIdChanged();
                }
            }
        }
        private global::System.String _WatchTypeId;
        partial void OnWatchTypeIdChanging(global::System.String value);
        partial void OnWatchTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchTypeName
        {
            get
            {
                return _WatchTypeName;
            }
            set
            {
                OnWatchTypeNameChanging(value);
                ReportPropertyChanging("WatchTypeName");
                _WatchTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WatchTypeName");
                OnWatchTypeNameChanged();
            }
        }
        private global::System.String _WatchTypeName;
        partial void OnWatchTypeNameChanging(global::System.String value);
        partial void OnWatchTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WatchDescription
        {
            get
            {
                return _WatchDescription;
            }
            set
            {
                OnWatchDescriptionChanging(value);
                ReportPropertyChanging("WatchDescription");
                _WatchDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WatchDescription");
                OnWatchDescriptionChanged();
            }
        }
        private global::System.String _WatchDescription;
        partial void OnWatchDescriptionChanging(global::System.String value);
        partial void OnWatchDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WatchDBModel", "FK_Watch_WatchType", "Watch")]
        public EntityCollection<Watch> Watch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Watch>("WatchDBModel.FK_Watch_WatchType", "Watch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Watch>("WatchDBModel.FK_Watch_WatchType", "Watch", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
